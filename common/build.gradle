/**
 * This file is part of INU Cafeteria.
 *
 * Copyright (C) 2020 INU Global App Center <potados99@gmail.com>
 *
 * INU Cafeteria is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * INU Cafeteria is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <https://www.gnu.org/licenses/>.
 */

apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion 29

    defaultConfig {
        minSdkVersion 24
        targetSdkVersion 29
        versionCode project.ext.versionCode
        versionName project.ext.versionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        // okHTTP wants this!
        targetCompatibility = 1.8
        sourceCompatibility = 1.8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    /** Tests */
    testImplementation "junit:junit:$junit_version"
    androidTestImplementation "androidx.test:runner:$test_runner_version"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso_core_version"

    /**
     * Dependencies below will be used globally in every module.
     * The 'api' artifact reveals its dependencies to its user,
     * allowing them to be used without 'implementation' again in each module.
     */

    /** Kotlin extensions */
    api "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    api "androidx.appcompat:appcompat:$appcompat_version"
    api "androidx.core:core-ktx:$core_ktx_version"

    /** Timber */
    api "com.jakewharton.timber:timber:$timber_version"

    /** Koin */
    api "org.koin:koin-android:$koin_version"

    /** Retrofit2 */
    api "com.squareup.retrofit2:retrofit:$retrofit_version"
    api "com.squareup.retrofit2:converter-gson:$retrofit_version"

    /** GSON */
    api "com.google.code.gson:gson:$gson_version"

    /** Jsoup */
    api "org.jsoup:jsoup:$jsoup_version"

    /** Barcode */
    api "com.google.zxing:core:$zxing_version"

    /** Coroutine */
    api "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.9"
}
