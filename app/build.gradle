/**
 * This file is part of INU Cafeteria.
 *
 * Copyright (C) 2020 INU Global App Center <potados99@gmail.com>
 *
 * INU Cafeteria is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * INU Cafeteria is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <https://www.gnu.org/licenses/>.
 */

plugins {
    id 'com.android.application'
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
    id 'com.google.firebase.firebase-perf'

    id 'kotlin-android'
    id 'kotlin-kapt'
}

android {
    compileSdkVersion 29

    defaultConfig {
        minSdkVersion 24
        targetSdkVersion 29

        applicationId 'com.inu.cafeteria'
        versionCode project.ext.versionCode
        versionName project.ext.versionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        archivesBaseName = "$applicationId-v$versionName-$project.ext.versionCode"
        signingConfig signingConfigs.debug
    }

    buildTypes {
        release {
            minifyEnabled false // This option is very problematic.
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    buildFeatures {
        dataBinding = true
        viewBinding = true
    }

    flavorDimensions "stage", "server"

    productFlavors {
        betatest {
            dimension "stage"
            versionNameSuffix "-betatest"
        }

        finalstage {
            dimension "stage"
        }

        emulator {
            // Running app on emulator, and want to communicate with host 127.0.0.1
            dimension "server"
            versionNameSuffix "-emulator"
        }

        localserver {
            dimension "server"
            versionNameSuffix "-localserver"
        }

        productionserver {
            dimension "server"
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation project(":common")
    implementation project(":domain")
    implementation project(":data")

    /** Tests */
    testImplementation "junit:junit:$junit_version"
    androidTestImplementation "androidx.test:rules:$test_rules_version"
    androidTestImplementation "androidx.test:runner:$test_runner_version"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso_core_version"
    androidTestImplementation "androidx.test.ext:junit:$junit_ext_version"
    androidTestImplementation "org.koin:koin-test:$koin_test_version"

    /** Kotlin */
    implementation "androidx.core:core-ktx:$kotlin_core_ktx_version"

    /** Koin Test */
    androidTestImplementation "org.koin:koin-test:$koin_version"

    /** RecyclerView */
    implementation "androidx.recyclerview:recyclerview:$recyclerview_version"

    /** ConstraintLayout */
    implementation "androidx.constraintlayout:constraintlayout:$constraintlayout_version"

    /** ViewModel */
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.fragment:fragment-ktx:1.2.5"

    /** Material */
    implementation "com.google.android.material:material:$material_version"

    /** Persistent Cookie Jar */
    implementation "com.github.franmontiel:PersistentCookieJar:$cookiejar_version"

    /** Glide */
    implementation "com.github.bumptech.glide:glide:$glide_version"

    /** Navigation */
    implementation "androidx.navigation:navigation-fragment-ktx:$navigation_version"
    implementation "androidx.navigation:navigation-ui-ktx:$navigation_version"

    /** Particle system */
    implementation "com.plattysoft.leonids:LeonidsLib:$leonids_version"

    /** Swipe refresh layout */
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:$swipe_refresh_layout_version"

    /** Text recognition */
    implementation "com.google.android.gms:play-services-mlkit-text-recognition:$mlkit_version"

    /** CameraX */
    implementation "androidx.camera:camera-camera2:1.0.0-beta07"
    implementation "androidx.camera:camera-lifecycle:1.0.0-beta07"
    implementation "androidx.camera:camera-view:1.0.0-alpha14"

    /** Tooltip */
    implementation "it.sephiroth.android.library.targettooltip:target-tooltip-library:$tooltip_version"

    /** In-app review */
    implementation "com.google.android.play:core:$play_core_version"
    implementation "com.google.android.play:core-ktx:$play_core_ktx_version"

    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.6'
}

repositories {
    mavenCentral()
}
